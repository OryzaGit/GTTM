{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "oryzaworkspce"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"oryzaworkspce-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'oryzaworkspce-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:oryzaworkspce.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "object",
			"defaultValue": {
				"type": "AzureKeyVaultSecret",
				"store": {
					"referenceName": "AzureKeyVault",
					"type": "LinkedServiceReference"
				},
				"secretName": "OryzaSecret"
			}
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://OryzaKeyVault.vault.azure.net/"
		},
		"oryzaworkspce-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://oryzadatalake.dfs.core.windows.net"
		},
		"Trigger FIle log new_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Storage/storageAccounts/oryzadatalake"
		},
		"Trigger Test_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Storage/storageAccounts/oryzadatalake"
		},
		"Trigger new file_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Storage/storageAccounts/oryzadatalake"
		},
		"Trigger_1_properties_Pipeline_linh_parameters_triggeer_filename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"Trigger_1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Storage/storageAccounts/oryzastorage"
		},
		"Trigger_event_1_properties_Pipeline_linh_parameters_triggeer_filename": {
			"type": "string",
			"defaultValue": "@trigger.Body().fileName"
		},
		"Trigger_event_1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Storage/storageAccounts/oryzastorage"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyLog')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_dmq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "oryzafiledatalake/synapse/traffic-log/log_2023_11_25.parquet"
							},
							{
								"name": "Destination",
								"value": "dbo.TrafficLog"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_dmq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_dmq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_dmq')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_dmq')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipelineViolation2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_ash')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_ash",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "oryzafiledatalake/synapse/traffic-violation/violation_2023_11_23.parquet"
							},
							{
								"name": "Destination",
								"value": "dbo.TrafficViolation"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlPoolSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ash",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ash",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_ash')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_ash')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipeLineViolation')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata2').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.parquet')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}' and Type ='violation'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy_412",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "violation",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "Copy_412",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "oryzafiledatalake/synapse/traffic-violation/violation_2023_11_23.parquet"
													},
													{
														"name": "Destination",
														"value": "dbo.TrafficViolation"
													}
												],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/traffic-violation",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SourceDataset_412",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DestinationDataset_412",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_412')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_412')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"DBName": "OryzaPoolDemo"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "name",
											"type": "String",
											"value": "demo2",
											"direction": "Input"
										},
										{
											"name": "type",
											"type": "String",
											"value": "log",
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 2')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata2').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.parquet')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}' and Type ='violation'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy_ash",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "oryzafiledatalake/synapse/traffic-violation/violation_2023_11_23.parquet"
													},
													{
														"name": "Destination",
														"value": "dbo.TrafficViolation"
													}
												],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/traffic-violation",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SourceDataset_ash",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DestinationDataset_ash",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Copy_ash",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "violation",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_ash')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_ash')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineGetFileLog')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.parquet')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy_dmq",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Script1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "oryzafiledatalake/synapse/traffic-log/log_2023_11_25.parquet"
													},
													{
														"name": "Destination",
														"value": "dbo.TrafficLog"
													}
												],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/traffic-log",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SourceDataset_dmq",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DestinationDataset_dmq",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "log",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"isSucess": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_dmq')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_dmq')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PipelineReport')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Parquet4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@endswith(item().name,'.parquet')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterReportOverview",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterReportOverview').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupReportOverview",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupReportOverview",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LookupReportOverview').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyReportOverview",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/report",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Parquet5",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SqlPoolTableReportOverview",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "Script1",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "CopyReportOverview",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "report",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterReportOverview",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'report_overview')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1_copy1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterReportVehicleFluctuations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterReportVehicleFluctuations').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupReportClassifyVehicle",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1_copy1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupReportClassifyVehicle",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LookupReportClassifyVehicle').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2_copy1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyReportVehicleFluctuations",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/report",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Parquet5",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SqlPoolTableReportVehicleFluctuations",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "ScriptReportVehicleFluctuations",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "CopyReportVehicleFluctuations",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "report",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterReportVehicleFluctuations",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'report_vehicle_fluctuations')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterReportClassifyVehicle",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'report_classify_vehicle')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachReportClassifyVehicle",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterReportClassifyVehicle",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterReportClassifyVehicle').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LookupReportClassifyVehicle2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlPoolSource",
											"sqlReaderQuery": {
												"value": "select Name,Type from LogsFile\nwhere Name = '@{item().name}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "SqlPoolTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If ConditionReportClassifyVehicle",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "LookupReportClassifyVehicle2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('LookupReportClassifyVehicle2').output?.firstRow,null)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait2_copy1_copy1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "CopyReportClassifyVehicle",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": "synapse/report",
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "SqlPoolSink",
														"allowCopyCommand": true,
														"copyCommandSettings": {}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
															"type": "LinkedServiceReference"
														}
													}
												},
												"inputs": [
													{
														"referenceName": "Parquet5",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "SqlPoolTableReportClassifyVehicle",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "ScriptReportClassifyVehicle",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "CopyReportClassifyVehicle",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "oryzaworkspce-WorkspaceDefaultSqlServer",
													"type": "LinkedServiceReference",
													"parameters": {
														"DBName": "OryzaPoolDemo"
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "name",
																	"type": "String",
																	"value": {
																		"value": "@item().name",
																		"type": "Expression"
																	},
																	"direction": "Input"
																},
																{
																	"name": "type",
																	"type": "String",
																	"value": "report",
																	"direction": "Input"
																}
															],
															"type": "Query",
															"text": "INSERT INTO LogsFile(Name,Type)\nVALUES(@name,@type)"
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"isSucess": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet4')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTable1')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet5')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTableReportOverview')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultSqlServer')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTableReportVehicleFluctuations')]",
				"[concat(variables('workspaceId'), '/datasets/SqlPoolTableReportClassifyVehicle')]",
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline_linh')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {
									"container": "source",
									"folder": "data",
									"file": {
										"value": "@pipeline().parameters.triggeer_filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {
									"container": "sink",
									"folder": "data_ouput",
									"file": {
										"value": "@pipeline().parameters.triggeer_filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"triggeer_filename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_2tg')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_412')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficViolation"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_4pj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PlateColor",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "VehicleColor",
						"type": "varchar"
					},
					{
						"name": "VehicleModel",
						"type": "varchar"
					},
					{
						"name": "Speed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsWrongLane",
						"type": "bit"
					},
					{
						"name": "SmallImg",
						"type": "varchar"
					},
					{
						"name": "BigImg",
						"type": "varchar"
					},
					{
						"name": "Weight",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CamName",
						"type": "varchar"
					},
					{
						"name": "Accuracy",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IsOverload",
						"type": "bit"
					},
					{
						"name": "WeightOverload",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IsOversize",
						"type": "bit"
					},
					{
						"name": "VehicleLength",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VehicleWidth",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VehicleHeight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EventTraffic",
						"type": "varchar"
					},
					{
						"name": "BeforeImg",
						"type": "varchar"
					},
					{
						"name": "AfterImg",
						"type": "varchar"
					},
					{
						"name": "CreateAt",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "UpdateAt",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "IsDelete",
						"type": "bit"
					},
					{
						"name": "Hash",
						"type": "varchar"
					},
					{
						"name": "PlateNo",
						"type": "varchar"
					},
					{
						"name": "Lane",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CamIpAddress",
						"type": "varchar"
					},
					{
						"name": "VolumeOversize",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Logs"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_5dl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Time",
						"type": "date"
					},
					{
						"name": "PlateNo",
						"type": "varchar"
					},
					{
						"name": "PlateColor",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "VehicleColor",
						"type": "varchar"
					},
					{
						"name": "VehicleModel",
						"type": "varchar"
					},
					{
						"name": "Speed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Lane",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsWrongLane",
						"type": "bit"
					},
					{
						"name": "IsOverload",
						"type": "bit"
					},
					{
						"name": "WeightOverload",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsOversize",
						"type": "bit"
					},
					{
						"name": "VolumeOversize",
						"type": "varchar"
					},
					{
						"name": "VehicleLength",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleWidth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleHeight",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventTraffic",
						"type": "varchar"
					},
					{
						"name": "Hash",
						"type": "varchar"
					},
					{
						"name": "ExtraData",
						"type": "nvarchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "date"
					},
					{
						"name": "UpdatedAt",
						"type": "date"
					},
					{
						"name": "DeletedAt",
						"type": "date"
					},
					{
						"name": "AfterImg",
						"type": "varchar"
					},
					{
						"name": "BeforeImg",
						"type": "varchar"
					},
					{
						"name": "BigImg",
						"type": "varchar"
					},
					{
						"name": "SmallImg",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_6rq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficViolation"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_897')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PlateNo",
						"type": "varchar"
					},
					{
						"name": "PlateColor",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "VehicleColor",
						"type": "varchar"
					},
					{
						"name": "VehicleModel",
						"type": "varchar"
					},
					{
						"name": "Speed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Lane",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsWrongLane",
						"type": "bit"
					},
					{
						"name": "IsOverload",
						"type": "bit"
					},
					{
						"name": "WeightOverload",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsOversize",
						"type": "bit"
					},
					{
						"name": "VolumeOversize",
						"type": "varchar"
					},
					{
						"name": "VehicleLength",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleWidth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleHeight",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventTraffic",
						"type": "varchar"
					},
					{
						"name": "Hash",
						"type": "varchar"
					},
					{
						"name": "ExtraData",
						"type": "nvarchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DeletedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AfterImg",
						"type": "varchar"
					},
					{
						"name": "BeforeImg",
						"type": "varchar"
					},
					{
						"name": "BigImg",
						"type": "varchar"
					},
					{
						"name": "SmallImg",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_ash')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficViolation"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_dmq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_g6h')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_lkq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_mjh')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Time",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "PlateNo",
						"type": "varchar"
					},
					{
						"name": "PlateColor",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "VehicleColor",
						"type": "varchar"
					},
					{
						"name": "VehicleModel",
						"type": "varchar"
					},
					{
						"name": "Speed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Lane",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsWrongLane",
						"type": "bit"
					},
					{
						"name": "IsOverload",
						"type": "bit"
					},
					{
						"name": "WeightOverload",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsOversize",
						"type": "bit"
					},
					{
						"name": "VolumeOversize",
						"type": "varchar"
					},
					{
						"name": "VehicleLength",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleWidth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "VehicleHeight",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EventTraffic",
						"type": "varchar"
					},
					{
						"name": "Hash",
						"type": "varchar"
					},
					{
						"name": "ExtraData",
						"type": "nvarchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "UpdatedAt",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "DeletedAt",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "AfterImg",
						"type": "varchar"
					},
					{
						"name": "BeforeImg",
						"type": "varchar"
					},
					{
						"name": "BigImg",
						"type": "varchar"
					},
					{
						"name": "SmallImg",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_pl8')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PlateNo",
						"type": "varchar"
					},
					{
						"name": "PlateColor",
						"type": "varchar"
					},
					{
						"name": "VehicleType",
						"type": "varchar"
					},
					{
						"name": "VehicleColor",
						"type": "varchar"
					},
					{
						"name": "VehicleModel",
						"type": "varchar"
					},
					{
						"name": "Speed",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Lane",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "IsWrongLane",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "IsOverload",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "WeightOverload",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsOversize",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "VolumeOversize",
						"type": "varchar"
					},
					{
						"name": "VehicleLength",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "VehicleWidth",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "VehicleHeight",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EventTraffic",
						"type": "varchar"
					},
					{
						"name": "Hash",
						"type": "varchar"
					},
					{
						"name": "ExtraData",
						"type": "nvarchar"
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DeletedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AfterImg",
						"type": "varchar"
					},
					{
						"name": "BeforeImg",
						"type": "varchar"
					},
					{
						"name": "BigImg",
						"type": "varchar"
					},
					{
						"name": "SmallImg",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TrafficLog"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_sow')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "copyfile",
						"folderPath": "synapse/workspaces/oryzaworkspce",
						"fileSystem": "oryzafiledatalake"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_tng')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [],
				"typeProperties": {
					"table": "log_2023_11_23"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT32"
					},
					{
						"name": "Lane",
						"type": "INT32"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT32"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT32"
					},
					{
						"name": "VehicleWidth",
						"type": "INT32"
					},
					{
						"name": "VehicleHeight",
						"type": "INT32"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/traffic-violation",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LogId",
						"type": "UTF8"
					},
					{
						"name": "ViolationPatternId",
						"type": "UTF8"
					},
					{
						"name": "StatusId",
						"type": "UTF8"
					},
					{
						"name": "DocumentNumber",
						"type": "UTF8"
					},
					{
						"name": "OperationTeam",
						"type": "UTF8"
					},
					{
						"name": "Dear",
						"type": "UTF8"
					},
					{
						"name": "VehicleOwner",
						"type": "UTF8"
					},
					{
						"name": "DOB",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "Address",
						"type": "UTF8"
					},
					{
						"name": "LocationViolation",
						"type": "UTF8"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "Coordinate",
						"type": "UTF8"
					},
					{
						"name": "SettlementAgency",
						"type": "UTF8"
					},
					{
						"name": "DateTranfer",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DateSolving",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/traffic-violation",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LogId",
						"type": "UTF8"
					},
					{
						"name": "ViolationPatternId",
						"type": "UTF8"
					},
					{
						"name": "StatusId",
						"type": "UTF8"
					},
					{
						"name": "DocumentNumber",
						"type": "UTF8"
					},
					{
						"name": "OperationTeam",
						"type": "UTF8"
					},
					{
						"name": "Dear",
						"type": "UTF8"
					},
					{
						"name": "VehicleOwner",
						"type": "UTF8"
					},
					{
						"name": "DOB",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "Address",
						"type": "UTF8"
					},
					{
						"name": "LocationViolation",
						"type": "UTF8"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "Coordinate",
						"type": "UTF8"
					},
					{
						"name": "SettlementAgency",
						"type": "UTF8"
					},
					{
						"name": "DateTranfer",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DateSolving",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/report",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet5')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/report",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Type",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "Total",
						"type": "INT64"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_2tg')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_25.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_412')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "violation_2023_11_23.parquet",
						"folderPath": "synapse/traffic-violation",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_4pj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2023-11-14 15:55:38.313807.snappy.parquet",
						"folderPath": "synapse/workspaces/oryzaworkspce/data-test",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "Time",
						"type": "INT96"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT32"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "Weight",
						"type": "INT32"
					},
					{
						"name": "CamName",
						"type": "UTF8"
					},
					{
						"name": "Accuracy",
						"type": "DOUBLE"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "DOUBLE"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VehicleLength",
						"type": "DOUBLE"
					},
					{
						"name": "VehicleWidth",
						"type": "DOUBLE"
					},
					{
						"name": "VehicleHeight",
						"type": "DOUBLE"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "CreateAt",
						"type": "INT96"
					},
					{
						"name": "UpdateAt",
						"type": "INT96"
					},
					{
						"name": "IsDelete",
						"type": "BOOLEAN"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "Lane",
						"type": "INT32"
					},
					{
						"name": "CamIpAddress",
						"type": "UTF8"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_5dl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_25.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT32"
					},
					{
						"name": "Lane",
						"type": "INT32"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT32"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT32"
					},
					{
						"name": "VehicleWidth",
						"type": "INT32"
					},
					{
						"name": "VehicleHeight",
						"type": "INT32"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_6rq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "violation_2023_11_23.parquet",
						"folderPath": "synapse/traffic-violation",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_897')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "output_2023_11_23.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT64"
					},
					{
						"name": "Lane",
						"type": "INT64"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT64"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT64"
					},
					{
						"name": "VehicleWidth",
						"type": "INT64"
					},
					{
						"name": "VehicleHeight",
						"type": "INT64"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_ash')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "violation_2023_11_23.parquet",
						"folderPath": "synapse/traffic-violation",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_dmq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_25.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_g6h')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_25.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_lkq')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_25.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_mjh')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_23.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT32"
					},
					{
						"name": "Lane",
						"type": "INT32"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT32"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT32"
					},
					{
						"name": "VehicleWidth",
						"type": "INT32"
					},
					{
						"name": "VehicleHeight",
						"type": "INT32"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_pl8')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_22.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT64"
					},
					{
						"name": "Lane",
						"type": "INT64"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT64"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT64"
					},
					{
						"name": "VehicleWidth",
						"type": "INT64"
					},
					{
						"name": "VehicleHeight",
						"type": "INT64"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_sow')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-a6907cc8-71dc-4334-8d27-b8e8df6addbb-c000.snappy.parquet",
						"folderPath": "synapse/workspaces/oryzaworkspce/data-test",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "INT96"
					},
					{
						"name": "UpdatedAt",
						"type": "INT96"
					},
					{
						"name": "DeletedAt",
						"type": "INT96"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "TradingCode",
						"type": "UTF8"
					},
					{
						"name": "userCreateID",
						"type": "UTF8"
					},
					{
						"name": "IsSuccess",
						"type": "INT32"
					},
					{
						"name": "DeviceId",
						"type": "UTF8"
					},
					{
						"name": "MessageError",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_tng')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oryzaworkspce-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "log_2023_11_23.parquet",
						"folderPath": "synapse/traffic-log",
						"fileSystem": "oryzafiledatalake"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Time",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PlateNo",
						"type": "UTF8"
					},
					{
						"name": "PlateColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleType",
						"type": "UTF8"
					},
					{
						"name": "VehicleColor",
						"type": "UTF8"
					},
					{
						"name": "VehicleModel",
						"type": "UTF8"
					},
					{
						"name": "Speed",
						"type": "INT32"
					},
					{
						"name": "Lane",
						"type": "INT32"
					},
					{
						"name": "IsWrongLane",
						"type": "BOOLEAN"
					},
					{
						"name": "IsOverload",
						"type": "BOOLEAN"
					},
					{
						"name": "WeightOverload",
						"type": "INT32"
					},
					{
						"name": "IsOversize",
						"type": "BOOLEAN"
					},
					{
						"name": "VolumeOversize",
						"type": "UTF8"
					},
					{
						"name": "VehicleLength",
						"type": "INT32"
					},
					{
						"name": "VehicleWidth",
						"type": "INT32"
					},
					{
						"name": "VehicleHeight",
						"type": "INT32"
					},
					{
						"name": "EventTraffic",
						"type": "UTF8"
					},
					{
						"name": "Hash",
						"type": "UTF8"
					},
					{
						"name": "ExtraData",
						"type": "UTF8"
					},
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CreatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "UpdatedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "DeletedAt",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "AfterImg",
						"type": "UTF8"
					},
					{
						"name": "BeforeImg",
						"type": "UTF8"
					},
					{
						"name": "BigImg",
						"type": "UTF8"
					},
					{
						"name": "SmallImg",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/oryzaworkspce-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "date"
					},
					{
						"name": "UpdatedAt",
						"type": "date"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LogsFile"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTableReportClassifyVehicle')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Total",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportClassifyVehicle"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTableReportOverview')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "TotalAllVehicleByDay",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TotalViolationVehicleByDay",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TotalMissDataImageByDay",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TotalMissDataSpeedByDay",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportOverview"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlPoolTableReportVehicleFluctuations')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "ZeroHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "OneHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwoHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ThreeHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FourHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FiveHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SixHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SevenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EightHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "NineHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ElevenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwelveHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ThirteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FourteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FifteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SixteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SeventeenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EighteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "NineteenHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwentyHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwentyOneHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwentyTwoHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TwentyThreeHour",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CreatedAt",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportVehicleFluctuations"
				},
				"sqlPool": {
					"referenceName": "OryzaPoolDemo",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/OryzaPoolDemo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "AzureBlobFS",
				"annotations": [],
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "OryzaSecret",
						"secretVersion": "06082e666271402e99908969166a235f"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapse')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSynapseArtifacts",
				"typeProperties": {
					"endpoint": "https://oryzaworkspce.dev.azuresynapse.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Synapse/workspaces/oryzaworkspce"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/oryzaworkspce-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('oryzaworkspce-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/oryzaworkspce-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('oryzaworkspce-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dayly 6hour')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PipelineReport",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 6,
						"startTime": "2023-11-28T00:00:00",
						"timeZone": "SE Asia Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PipelineReport')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger 5 minite')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PipeLineViolation",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PipelineGetFileLog",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2023-11-29T02:35:00",
						"timeZone": "SE Asia Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/PipeLineViolation')]",
				"[concat(variables('workspaceId'), '/pipelines/PipelineGetFileLog')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger FIle log new')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/oryzafiledatalake/blobs/synapse/traffic-log",
					"blobPathEndsWith": ".parquet",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Trigger FIle log new_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger Minute')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-11-13T08:51:00",
						"timeZone": "SE Asia Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger Test')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/sqldbledgerdigests/blobs/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Trigger Test_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger new file')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Trigger new file_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger_1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_linh",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggeer_filename": "[parameters('Trigger_1_properties_Pipeline_linh_parameters_triggeer_filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/source/blobs/data",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Trigger_1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Pipeline_linh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger_event_1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Pipeline_linh",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggeer_filename": "[parameters('Trigger_event_1_properties_Pipeline_linh_parameters_triggeer_filename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/source/blobs/data",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Trigger_event_1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Pipeline_linh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ID]\n,[Time]\n,[PlateColor]\n,[VehicleType]\n,[VehicleColor]\n,[VehicleModel]\n,[Speed]\n,[IsWrongLane]\n,[SmallImg]\n,[BigImg]\n,[Weight]\n,[CamName]\n,[Accuracy]\n,[IsOverload]\n,[WeightOverload]\n,[IsOversize]\n,[VehicleLength]\n,[VehicleWidth]\n,[VehicleHeight]\n,[EventTraffic]\n,[BeforeImg]\n,[AfterImg]\n,[CreateAt]\n,[UpdateAt]\n,[IsDelete]\n,[Hash]\n,[PlateNo]\n,[Lane]\n,[CamIpAddress]\n,[VolumeOversize]\n FROM [dbo].[Logs]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "OryzaPoolDemo",
						"poolName": "OryzaPoolDemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ID]\n,[Name]\n,[Type]\n,[CreatedAt]\n,[UpdatedAt]\n FROM [dbo].[LogsFile]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "OryzaPoolDemo",
						"poolName": "OryzaPoolDemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [ID]\n,[Name]\n,[Type]\n,[CreatedAt]\n,[UpdatedAt]\n FROM [dbo].[LogsFile]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "OryzaPoolDemo",
						"poolName": "OryzaPoolDemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/queryinit')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP TABLE TrafficViolation;\nCREATE TABLE TrafficViolation (\n    LogId varchar(50),\n    ViolationPatternId varchar(255),\n    StatusId varchar(255),\n    DocumentNumber varchar(255),\n    OperationTeam varchar(100),\n    Dear varchar(100),\n    VehicleOwner varchar(100), \n    DOB datetime,\n    Address varchar(255),\n    LocationViolation varchar(255),\n    Description varchar(1000),\n    Coordinate varchar(255),\n    SettlementAgency varchar(100),\n    DateTranfer date,\n    DateSolving date,\n    ExtraData varchar(4000),\n    ID varchar(50),\n    CreatedAt date,\n    UpdatedAt date, \n    DeletedAt date\n)\nDROP TABLE TrafficLog;\nCREATE TABLE TrafficLog (\n    Time date, \n    PlateNo varchar(50),\n    PlateColor varchar(255),\n    VehicleType varchar(255),\n    VehicleColor varchar(255),\n    VehicleModel varchar(255),\n    Speed int,\n    Lane int,\n    IsWrongLane bit,\n    IsOverload bit, \n    WeightOverload int,\n    IsOversize bit,\n    VolumeOversize varchar(100),\n    VehicleLength int,\n    VehicleWidth int, \n    VehicleHeight int,\n    EventTraffic varchar(255),\n    Hash varchar(255),\n    ExtraData NVARCHAR(4000),\n    ID varchar(50),\n    CreatedAt date,\n    UpdatedAt date, \n    DeletedAt date,\n    AfterImg varchar(500),\n    BeforeImg varchar(500), \n    BigImg varchar(500),\n    SmallImg varchar(500)\n)\nCREATE INDEX idx_id ON TrafficLog (ID);\nCREATE INDEX idx_time ON TrafficLog (Time);\nCREATE INDEX idx_PlateNo ON TrafficLog (PlateNo);\nCREATE INDEX idx_Speed ON TrafficLog (Speed);\nCREATE INDEX idx_VehicleType ON TrafficLog (VehicleType);\nCREATE INDEX idx_Lane ON TrafficLog (Lane);\nCREATE INDEX idx_CreatedAt ON TrafficLog (CreatedAt);\nCREATE INDEX idx_DeletedAt ON TrafficLog (DeletedAt);\n-- kết hợp index CreatedAt and VehicleType and PlateNo and DeletedAt\nCREATE INDEX idx_CreatedAt_VehicleType_PlateNo_DeletedAt ON TrafficLog (CreatedAt,VehicleType,PlateNo,DeletedAt);\n-- kết hợp index CreatedAt and speed and DeletedAt\nCREATE INDEX idx_CreatedAt_Speed_DeletedAt ON TrafficLog (CreatedAt,Speed,DeletedAt);\nTRUNCATE TABLE TrafficLog;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "OryzaPoolDemo",
						"poolName": "OryzaPoolDemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/queryinit_report')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE TABLE ReportOverview (\n    TotalAllVehicleByDay BIGINT,\n    TotalViolationVehicleByDay BIGINT,\n    TotalMissDataImageByDay BIGINT,\n    TotalMissDataSpeedByDay BIGINT,\n    ID varchar(50),\n    CreatedAt DATETIME\n);\n\n-- Create table based on schemaReportVehicleFluctuations\nCREATE TABLE ReportVehicleFluctuations (\n    Type NVARCHAR(255),\n    ZeroHour BIGINT,\n    OneHour BIGINT,\n    TwoHour BIGINT,\n    ThreeHour BIGINT,\n    FourHour BIGINT,\n    FiveHour BIGINT,\n    SixHour BIGINT,\n    SevenHour BIGINT,\n    EightHour BIGINT,\n    NineHour BIGINT,\n    TenHour BIGINT,\n    ElevenHour BIGINT,\n    TwelveHour BIGINT,\n    ThirteenHour BIGINT,\n    FourteenHour BIGINT,\n    FifteenHour BIGINT,\n    SixteenHour BIGINT,\n    SeventeenHour BIGINT,\n    EighteenHour BIGINT,\n    NineteenHour BIGINT,\n    TwentyHour BIGINT,\n    TwentyOneHour BIGINT,\n    TwentyTwoHour BIGINT,\n    TwentyThreeHour BIGINT,\n    ID varchar(50),\n    CreatedAt date\n);\n\n-- Create table based on schemaReportClassifyVehicle\nCREATE TABLE ReportClassifyVehicle (\n    Type NVARCHAR(255),\n    Name NVARCHAR(255),\n    Total BIGINT,\n    ID varchar(50),\n    CreatedAt date\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "OryzaPoolDemo",
						"poolName": "OryzaPoolDemo"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "OryzaSpark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "56g",
					"driverCores": 8,
					"executorMemory": "56g",
					"executorCores": 8,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "93cae2b0-fbad-4a24-a536-70e8ce491b2a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/9a59d1c1-ada7-48aa-ad8b-848ae2288f40/resourceGroups/OryzaDev/providers/Microsoft.Synapse/workspaces/oryzaworkspce/bigDataPools/OryzaSpark",
						"name": "OryzaSpark",
						"type": "Spark",
						"endpoint": "https://oryzaworkspce.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/OryzaSpark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 3,
						"cores": 8,
						"memory": 56
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OryzaSpark')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 0,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "southeastasia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OryzaPoolDemo')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "southeastasia"
		}
	]
}